name: test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt update
            sudo apt install libopenmpi-dev openmpi-bin libsuitesparse-dev gmsh libboost-all-dev
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew update
            brew install openmpi suite-sparse gmsh boost
          fi
        shell: bash

      - name: Clone modules
        run: |
          git clone https://gitlab.dune-project.org/core/dune-common.git ${{ github.workspace }}
          git clone https://gitlab.dune-project.org/core/dune-geometry.git ${{ github.workspace }}
          git clone https://gitlab.dune-project.org/core/dune-grid.git ${{ github.workspace }}
          git clone https://gitlab.dune-project.org/core/dune-localfunctions.git ${{ github.workspace }}
          git clone https://gitlab.dune-project.org/core/dune-istl.git ${{ github.workspace }}
          git clone https://gitlab.dune-project.org/extensions/dune-alugrid.git ${{ github.workspace }}
          git clone https://gitlab.dune-project.org/dune-fem/dune-fem.git ${{ github.workspace }}

      - name: Configure and build modules
        run: ${{ github.workspace }}/dune-common/bin/dunecontrol --opts=${{ github.workspace }}/dune-mmesh/cmake/config.opts all

      - name: Build tests
        working-directory: ${{ github.workspace }}/dune-mmesh/build-cmake/
        run: make build_tests

      - name: Test
        working-directory: ${{ github.workspace }}/dune-mmesh/build-cmake/
        run: make test
