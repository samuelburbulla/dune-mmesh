.. _interface:

**************
Interface Grid
**************

Consider a domain :math:`\Omega \subset \mathbb{R}^d, d \in \{2,3\},` that includes a
:math:`(d-1)`-dimensional interface :math:`\Gamma \subset \Omega`.
We assume the domain is triangulated conforming to the interface :math:`\Gamma`.

.. include:: together.msh.rst

Let us denote this triangulation by :math:`\mathcal{T}` and the set of facets by :math:`\mathcal{F}`.
Due to conforming meshing, there exists a subset of facets :math:`\mathcal{F}_\Gamma \subset \mathcal{F}`
that belong to the interface :math:`\Gamma`.
Therefore, these facets in :math:`\mathcal{F}_\Gamma` can also be interpreted as a triangulation of a surface.
We call this surface triangulation the `interface grid` and denote it by :math:`\mathcal{T}_\Gamma`.

Dune-MMesh features a second implementation of the Dune grid interface that represents the interface triangulation :math:`\mathcal{T}_\Gamma`.
Therefore, facets have to be marked as belonging to the interface - usually this is done when parsing a .msh file.

The interface grid can be used like any other Dune grid as it implements all necessary functionality.

A codim-0 entity of the interface grid is represented by a CGAL cell-index pair as used for the codim-1 entities of the wrapper implementation.
This representation is made unique by taking the representation where the cell has the lower index.
All subentity objects can be generated by this representation just using the right indexing of vertices.
The geometry representations and element ids are made unique using the ordered tuple of vertex ids as it is done
in the full-dimensional wrapper implementation.

For iteration, the CGAL facet iterator is used that skips all facets not belonging to the interface.
Intersections and neighbor relationships are obtained by incident facet iterators.
Index sets are implemented by mappings of vertex ids.

The interface grid also supports networks. For this purpose, the intersection iterator returns all common intersections with
adjacent cells. Remark that this can be more than one for a single codim-1 subentity.

Each bulk grid intersection can be identified belonging to the interface or not.
It is also possible to convert bulk intersections to interface grid elements and vice versa as the underlying representation is the same.
When converting an interface grid entity to an bulk intersection you obtain the intersection seen from the cell with the lower index.
